plugins {
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.2.0"
    id("io.micronaut.test-resources") version "4.1.1"
    id("jacoco")
}

version = "0.1"
group = "uk.ac.york.eng2.cli"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("info.picocli:picocli-codegen:4.7.5")
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor:2.4.0")
    implementation("info.picocli:picocli:4.7.5")
    implementation("io.micronaut.picocli:micronaut-picocli:5.1.0")
    implementation("io.micronaut.serde:micronaut-serde-jackson:2.4.0")
    implementation("jakarta.annotation:jakarta.annotation-api:2.1.1")
    runtimeOnly("ch.qos.logback:logback-classic:1.4.11")
    testImplementation("io.micronaut.testresources:micronaut-test-resources-extensions-junit-platform:2.2.0")
    testImplementation("org.testcontainers:testcontainers:1.19.3")
    implementation("io.micronaut:micronaut-http-client:4.2.0")
    runtimeOnly("org.yaml:snakeyaml:2.0")
}


application {
    mainClass.set("uk.ac.york.eng2.cli.ClientCommand")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}


micronaut {
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("uk.ac.york.eng2.cli*")
    }
}
test{
    finalizedBy jacocoTestReport
}
jacocoTestReport{
    dependsOn test
}
tasks.named("dockerfile") {
    baseImage = "amazoncorretto:17-alpine3.17"
    editDockerfile {
        after("WORKDIR /home/app") {
            insert("RUN apk update && apk add bash")

            insert("ENV LOG_LEVEL=ERROR")
        }
    }

}
