plugins {
    id("io.micronaut.application") version "4.1.2"
    id("io.micronaut.aot") version "4.0.4"
    id("io.micronaut.test-resources") version "4.1.1"
    id("jacoco")

}

version = "0.1"
group = "com.york.eng2.eng2"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
    implementation("io.micronaut.kafka:micronaut-kafka")
    implementation("io.micronaut.kafka:micronaut-kafka-streams")
    implementation("io.micronaut.serde:micronaut-serde-jackson")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("jakarta.annotation:jakarta.annotation-api")
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("org.mariadb.jdbc:mariadb-java-client")
    runtimeOnly("org.yaml:snakeyaml")

    testImplementation("org.awaitility:awaitility:4.2.0")
    testImplementation("org.apache.kafka:kafka-streams-test-utils:3.6.0")
    testImplementation("io.micronaut:micronaut-http-server-netty")
}


application {
    mainClass.set("com.york.eng2.Application")
}

run{
    systemProperties([
            'datasources.default.url': 'jdbc:mariadb://localhost:3307/trending',
            'datasources.default.username': 'todo',
            'datasources.default.password': 'todosecret',
            'kafka.bootstrap.servers': 'localhost:9094,localhost:9095,localhost:9096',

    ])
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.york.eng2.*")
    }
    testResources {
        sharedServer = true
    }
    aot {
        // Please review carefully the optimizations enabled below
        // Check https://micronaut-projects.github.io/micronaut-aot/latest/guide/ for more details
        optimizeServiceLoading = false
        convertYamlToJava = false
        precomputeOperations = true
        cacheEnvironment = true
        optimizeClassLoading = true
        deduceEnvironment = true
        optimizeNetty = true
    }
}

test{
    finalizedBy jacocoTestReport
}
tasks.named("dockerfile") {
    baseImage = "amazoncorretto:17-alpine3.17"
}

jacocoTestReport {
    dependsOn test
}


