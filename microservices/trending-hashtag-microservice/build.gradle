plugins {
    id("io.micronaut.application") version "4.1.2"
    id("io.micronaut.aot") version "4.0.4"
    id("io.micronaut.test-resources") version "4.1.1"
    id("jacoco")
}
repositories{
    mavenCentral()
}

version = "0.1"
group = "uk.ac.york.eng2.trendingHashtags"

dependencies {
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
    implementation("io.micronaut.kafka:micronaut-kafka")
    implementation("io.micronaut.kafka:micronaut-kafka-streams")
    implementation("io.micronaut.serde:micronaut-serde-jackson")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("jakarta.annotation:jakarta.annotation-api")
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("org.mariadb.jdbc:mariadb-java-client")
    runtimeOnly("org.yaml:snakeyaml")
    testImplementation("io.micronaut.testresources:micronaut-test-resources-extensions-junit-platform")
    testImplementation("org.awaitility:awaitility:4.2.0")
    testImplementation("org.apache.kafka:kafka-streams-test-utils:3.6.0")
    testImplementation("io.micronaut:micronaut-http-server-netty")
    testImplementation('org.mockito:mockito-core:3.11.2')
    testImplementation('org.mockito:mockito-junit-jupiter:3.11.2')

    // Due to a security advisory
    implementation("io.netty:netty-codec-http2:4.1.100.Final")
    implementation("com.fasterxml.jackson.core:jackson-databind:2.16.0")
}


application {
    mainClass.set("uk.ac.york.eng2.trendingHashtags.Application")
}

jar{
    exclude("logback.xml")
}

run{
    systemProperties([
            'datasources.default.url': 'jdbc:mariadb://localhost:3307/hashtags',
            'datasources.default.username': 'todo',
            'datasources.default.password': 'todosecret',
            'kafka.bootstrap.servers': 'localhost:9094,localhost:9095,localhost:9096',
            'micronaut.server.port': '8081'
    ])
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("uk.ac.york.eng2.trendingHashtags.*")
    }
}

test{
    finalizedBy jacocoTestReport
}

jacocoTestReport{
    dependsOn test
}
tasks.named("dockerfile") {
    baseImage = "amazoncorretto:17-alpine3.17"
    instruction "RUN apk add --no-cache libstdc++ gcompat"
}

