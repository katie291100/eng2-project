
pre {

}

rule Model2Dto transform d : DTO {
	template : "templates/Model2Dto.egl"
	target : d.eContainer().name + "/src-gen/main/java/" + d.eContainer().getPackageFiles() + "/dto/"+ d.name.firstToUpperCase()+".java"
	parameters: Map{"package"= d.eContainer().package+".dto"}
//	formatter : java;
}

rule Model2Entity transform e : Entity {
    template : "templates/Model2Entity.egl"
    target : e.eContainer().name + "/src-gen/main/java/" + e.eContainer().getPackageFiles() + "/domain/"+ e.name.firstToUpperCase()+".java"
//  formatter : java;
}

//Generates controller interface
rule Model2Producer
	transform p : Producer {
		
	template : "templates/Model2Producer.egl"

	target : p.eContainer().name + "/src-gen/main/java/" + p.eContainer().getPackageFiles() + "/events/"+ p.name.firstToUpperCase()+".java"

}



//Generates controller abstract for scaffolding.
rule Model2DockerCompose
	transform s : System {
		
	template : "templates/Model2DockerCompose.egl"

	target : "docker-compose-gen.yml"

}

rule Model2DockerComposeSecrets
    transform s : System {
        
    template : "templates/Model2DockerSecrets.egl"

    target : "docker-compose-secrets.yml"

}

operation Microservice getPackageFiles(){
    return self.package.replace("\\.", "/");
}